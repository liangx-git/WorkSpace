package com.liangx.practice.booksystem.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class LibraryCardExample {
    protected String orderByClause;

    protected boolean distinct;

    protected List<Criteria> oredCriteria;

    public LibraryCardExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    public String getOrderByClause() {
        return orderByClause;
    }

    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    public boolean isDistinct() {
        return distinct;
    }

    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andCardIdIsNull() {
            addCriterion("card_id is null");
            return (Criteria) this;
        }

        public Criteria andCardIdIsNotNull() {
            addCriterion("card_id is not null");
            return (Criteria) this;
        }

        public Criteria andCardIdEqualTo(String value) {
            addCriterion("card_id =", value, "cardId");
            return (Criteria) this;
        }

        public Criteria andCardIdNotEqualTo(String value) {
            addCriterion("card_id <>", value, "cardId");
            return (Criteria) this;
        }

        public Criteria andCardIdGreaterThan(String value) {
            addCriterion("card_id >", value, "cardId");
            return (Criteria) this;
        }

        public Criteria andCardIdGreaterThanOrEqualTo(String value) {
            addCriterion("card_id >=", value, "cardId");
            return (Criteria) this;
        }

        public Criteria andCardIdLessThan(String value) {
            addCriterion("card_id <", value, "cardId");
            return (Criteria) this;
        }

        public Criteria andCardIdLessThanOrEqualTo(String value) {
            addCriterion("card_id <=", value, "cardId");
            return (Criteria) this;
        }

        public Criteria andCardIdLike(String value) {
            addCriterion("card_id like", value, "cardId");
            return (Criteria) this;
        }

        public Criteria andCardIdNotLike(String value) {
            addCriterion("card_id not like", value, "cardId");
            return (Criteria) this;
        }

        public Criteria andCardIdIn(List<String> values) {
            addCriterion("card_id in", values, "cardId");
            return (Criteria) this;
        }

        public Criteria andCardIdNotIn(List<String> values) {
            addCriterion("card_id not in", values, "cardId");
            return (Criteria) this;
        }

        public Criteria andCardIdBetween(String value1, String value2) {
            addCriterion("card_id between", value1, value2, "cardId");
            return (Criteria) this;
        }

        public Criteria andCardIdNotBetween(String value1, String value2) {
            addCriterion("card_id not between", value1, value2, "cardId");
            return (Criteria) this;
        }

        public Criteria andBorrowedBookNumberIsNull() {
            addCriterion("borrowed_book_number is null");
            return (Criteria) this;
        }

        public Criteria andBorrowedBookNumberIsNotNull() {
            addCriterion("borrowed_book_number is not null");
            return (Criteria) this;
        }

        public Criteria andBorrowedBookNumberEqualTo(Integer value) {
            addCriterion("borrowed_book_number =", value, "borrowedBookNumber");
            return (Criteria) this;
        }

        public Criteria andBorrowedBookNumberNotEqualTo(Integer value) {
            addCriterion("borrowed_book_number <>", value, "borrowedBookNumber");
            return (Criteria) this;
        }

        public Criteria andBorrowedBookNumberGreaterThan(Integer value) {
            addCriterion("borrowed_book_number >", value, "borrowedBookNumber");
            return (Criteria) this;
        }

        public Criteria andBorrowedBookNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("borrowed_book_number >=", value, "borrowedBookNumber");
            return (Criteria) this;
        }

        public Criteria andBorrowedBookNumberLessThan(Integer value) {
            addCriterion("borrowed_book_number <", value, "borrowedBookNumber");
            return (Criteria) this;
        }

        public Criteria andBorrowedBookNumberLessThanOrEqualTo(Integer value) {
            addCriterion("borrowed_book_number <=", value, "borrowedBookNumber");
            return (Criteria) this;
        }

        public Criteria andBorrowedBookNumberIn(List<Integer> values) {
            addCriterion("borrowed_book_number in", values, "borrowedBookNumber");
            return (Criteria) this;
        }

        public Criteria andBorrowedBookNumberNotIn(List<Integer> values) {
            addCriterion("borrowed_book_number not in", values, "borrowedBookNumber");
            return (Criteria) this;
        }

        public Criteria andBorrowedBookNumberBetween(Integer value1, Integer value2) {
            addCriterion("borrowed_book_number between", value1, value2, "borrowedBookNumber");
            return (Criteria) this;
        }

        public Criteria andBorrowedBookNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("borrowed_book_number not between", value1, value2, "borrowedBookNumber");
            return (Criteria) this;
        }

        public Criteria andCardCreatedDateIsNull() {
            addCriterion("card_created_date is null");
            return (Criteria) this;
        }

        public Criteria andCardCreatedDateIsNotNull() {
            addCriterion("card_created_date is not null");
            return (Criteria) this;
        }

        public Criteria andCardCreatedDateEqualTo(Date value) {
            addCriterionForJDBCDate("card_created_date =", value, "cardCreatedDate");
            return (Criteria) this;
        }

        public Criteria andCardCreatedDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("card_created_date <>", value, "cardCreatedDate");
            return (Criteria) this;
        }

        public Criteria andCardCreatedDateGreaterThan(Date value) {
            addCriterionForJDBCDate("card_created_date >", value, "cardCreatedDate");
            return (Criteria) this;
        }

        public Criteria andCardCreatedDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("card_created_date >=", value, "cardCreatedDate");
            return (Criteria) this;
        }

        public Criteria andCardCreatedDateLessThan(Date value) {
            addCriterionForJDBCDate("card_created_date <", value, "cardCreatedDate");
            return (Criteria) this;
        }

        public Criteria andCardCreatedDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("card_created_date <=", value, "cardCreatedDate");
            return (Criteria) this;
        }

        public Criteria andCardCreatedDateIn(List<Date> values) {
            addCriterionForJDBCDate("card_created_date in", values, "cardCreatedDate");
            return (Criteria) this;
        }

        public Criteria andCardCreatedDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("card_created_date not in", values, "cardCreatedDate");
            return (Criteria) this;
        }

        public Criteria andCardCreatedDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("card_created_date between", value1, value2, "cardCreatedDate");
            return (Criteria) this;
        }

        public Criteria andCardCreatedDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("card_created_date not between", value1, value2, "cardCreatedDate");
            return (Criteria) this;
        }

        public Criteria andCardExpirationDateIsNull() {
            addCriterion("card_expiration_date is null");
            return (Criteria) this;
        }

        public Criteria andCardExpirationDateIsNotNull() {
            addCriterion("card_expiration_date is not null");
            return (Criteria) this;
        }

        public Criteria andCardExpirationDateEqualTo(Date value) {
            addCriterionForJDBCDate("card_expiration_date =", value, "cardExpirationDate");
            return (Criteria) this;
        }

        public Criteria andCardExpirationDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("card_expiration_date <>", value, "cardExpirationDate");
            return (Criteria) this;
        }

        public Criteria andCardExpirationDateGreaterThan(Date value) {
            addCriterionForJDBCDate("card_expiration_date >", value, "cardExpirationDate");
            return (Criteria) this;
        }

        public Criteria andCardExpirationDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("card_expiration_date >=", value, "cardExpirationDate");
            return (Criteria) this;
        }

        public Criteria andCardExpirationDateLessThan(Date value) {
            addCriterionForJDBCDate("card_expiration_date <", value, "cardExpirationDate");
            return (Criteria) this;
        }

        public Criteria andCardExpirationDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("card_expiration_date <=", value, "cardExpirationDate");
            return (Criteria) this;
        }

        public Criteria andCardExpirationDateIn(List<Date> values) {
            addCriterionForJDBCDate("card_expiration_date in", values, "cardExpirationDate");
            return (Criteria) this;
        }

        public Criteria andCardExpirationDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("card_expiration_date not in", values, "cardExpirationDate");
            return (Criteria) this;
        }

        public Criteria andCardExpirationDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("card_expiration_date between", value1, value2, "cardExpirationDate");
            return (Criteria) this;
        }

        public Criteria andCardExpirationDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("card_expiration_date not between", value1, value2, "cardExpirationDate");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgIsNull() {
            addCriterion("card_logout_flg is null");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgIsNotNull() {
            addCriterion("card_logout_flg is not null");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgEqualTo(String value) {
            addCriterion("card_logout_flg =", value, "cardLogoutFlg");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgNotEqualTo(String value) {
            addCriterion("card_logout_flg <>", value, "cardLogoutFlg");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgGreaterThan(String value) {
            addCriterion("card_logout_flg >", value, "cardLogoutFlg");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgGreaterThanOrEqualTo(String value) {
            addCriterion("card_logout_flg >=", value, "cardLogoutFlg");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgLessThan(String value) {
            addCriterion("card_logout_flg <", value, "cardLogoutFlg");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgLessThanOrEqualTo(String value) {
            addCriterion("card_logout_flg <=", value, "cardLogoutFlg");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgLike(String value) {
            addCriterion("card_logout_flg like", value, "cardLogoutFlg");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgNotLike(String value) {
            addCriterion("card_logout_flg not like", value, "cardLogoutFlg");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgIn(List<String> values) {
            addCriterion("card_logout_flg in", values, "cardLogoutFlg");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgNotIn(List<String> values) {
            addCriterion("card_logout_flg not in", values, "cardLogoutFlg");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgBetween(String value1, String value2) {
            addCriterion("card_logout_flg between", value1, value2, "cardLogoutFlg");
            return (Criteria) this;
        }

        public Criteria andCardLogoutFlgNotBetween(String value1, String value2) {
            addCriterion("card_logout_flg not between", value1, value2, "cardLogoutFlg");
            return (Criteria) this;
        }
    }

    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}