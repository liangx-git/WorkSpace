<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liangx.practice.booksystem.mapper.BorrowedTableMapper">
  <resultMap id="BaseResultMap" type="com.liangx.practice.booksystem.entity.BorrowedTable">
    <constructor>
      <idArg column="book_id" javaType="java.lang.String" jdbcType="CHAR" />
      <idArg column="card_id" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="borrowed_date" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="return_date" javaType="java.util.Date" jdbcType="DATE" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, card_id, borrowed_date, return_date
  </sql>
  <select id="selectByExample" parameterType="com.liangx.practice.booksystem.entity.BorrowedTableExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from borrowed_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.liangx.practice.booksystem.entity.BorrowedTableKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from borrowed_table
    where book_id = #{bookId,jdbcType=CHAR}
      and card_id = #{cardId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.liangx.practice.booksystem.entity.BorrowedTableKey">
    delete from borrowed_table
    where book_id = #{bookId,jdbcType=CHAR}
      and card_id = #{cardId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.liangx.practice.booksystem.entity.BorrowedTableExample">
    delete from borrowed_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liangx.practice.booksystem.entity.BorrowedTable">
    insert into borrowed_table (book_id, card_id, borrowed_date, 
      return_date)
    values (#{bookId,jdbcType=CHAR}, #{cardId,jdbcType=CHAR}, #{borrowedDate,jdbcType=DATE}, 
      #{returnDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.liangx.practice.booksystem.entity.BorrowedTable">
    insert into borrowed_table
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="borrowedDate != null">
        borrowed_date,
      </if>
      <if test="returnDate != null">
        return_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=CHAR},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=CHAR},
      </if>
      <if test="borrowedDate != null">
        #{borrowedDate,jdbcType=DATE},
      </if>
      <if test="returnDate != null">
        #{returnDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liangx.practice.booksystem.entity.BorrowedTableExample" resultType="java.lang.Long">
    select count(*) from borrowed_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update borrowed_table
    <set>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=CHAR},
      </if>
      <if test="record.cardId != null">
        card_id = #{record.cardId,jdbcType=CHAR},
      </if>
      <if test="record.borrowedDate != null">
        borrowed_date = #{record.borrowedDate,jdbcType=DATE},
      </if>
      <if test="record.returnDate != null">
        return_date = #{record.returnDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update borrowed_table
    set book_id = #{record.bookId,jdbcType=CHAR},
      card_id = #{record.cardId,jdbcType=CHAR},
      borrowed_date = #{record.borrowedDate,jdbcType=DATE},
      return_date = #{record.returnDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liangx.practice.booksystem.entity.BorrowedTable">
    update borrowed_table
    <set>
      <if test="borrowedDate != null">
        borrowed_date = #{borrowedDate,jdbcType=DATE},
      </if>
      <if test="returnDate != null">
        return_date = #{returnDate,jdbcType=DATE},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=CHAR}
      and card_id = #{cardId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liangx.practice.booksystem.entity.BorrowedTable">
    update borrowed_table
    set borrowed_date = #{borrowedDate,jdbcType=DATE},
      return_date = #{returnDate,jdbcType=DATE}
    where book_id = #{bookId,jdbcType=CHAR}
      and card_id = #{cardId,jdbcType=CHAR}
  </update>
</mapper>