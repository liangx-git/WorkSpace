<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liangx.practice.booksystem.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.liangx.practice.booksystem.entity.User">
    <constructor>
      <idArg column="user_id" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="user_age" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="card_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_gender" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="user_phone_number" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="user_email" javaType="java.lang.String" jdbcType="CHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_age, card_id, user_gender, user_phone_number, user_email
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where user_id = #{userId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.liangx.practice.booksystem.entity.User">
    insert into user (user_id, user_name, user_age, 
      card_id, user_gender, user_phone_number, 
      user_email)
    values (#{userId,jdbcType=CHAR}, #{userName,jdbcType=CHAR}, #{userAge,jdbcType=INTEGER}, 
      #{cardId,jdbcType=INTEGER}, #{userGender,jdbcType=CHAR}, #{userPhoneNumber,jdbcType=CHAR}, 
      #{userEmail,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liangx.practice.booksystem.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userAge != null">
        user_age,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="userGender != null">
        user_gender,
      </if>
      <if test="userPhoneNumber != null">
        user_phone_number,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=CHAR},
      </if>
      <if test="userAge != null">
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=INTEGER},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=CHAR},
      </if>
      <if test="userPhoneNumber != null">
        #{userPhoneNumber,jdbcType=CHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liangx.practice.booksystem.entity.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=CHAR},
      </if>
      <if test="userAge != null">
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=INTEGER},
      </if>
      <if test="userGender != null">
        user_gender = #{userGender,jdbcType=CHAR},
      </if>
      <if test="userPhoneNumber != null">
        user_phone_number = #{userPhoneNumber,jdbcType=CHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=CHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liangx.practice.booksystem.entity.User">
    update user
    set user_name = #{userName,jdbcType=CHAR},
      user_age = #{userAge,jdbcType=INTEGER},
      card_id = #{cardId,jdbcType=INTEGER},
      user_gender = #{userGender,jdbcType=CHAR},
      user_phone_number = #{userPhoneNumber,jdbcType=CHAR},
      user_email = #{userEmail,jdbcType=CHAR}
    where user_id = #{userId,jdbcType=CHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.liangx.practice.booksystem.entity.User">
    <constructor>
      <idArg column="user_id" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="user_age" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="card_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_gender" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="user_phone_number" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="user_email" javaType="java.lang.String" jdbcType="CHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_age, card_id, user_gender, user_phone_number, user_email
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where user_id = #{userId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.liangx.practice.booksystem.entity.User">
    insert into user (user_id, user_name, user_age, 
      card_id, user_gender, user_phone_number, 
      user_email)
    values (#{userId,jdbcType=CHAR}, #{userName,jdbcType=CHAR}, #{userAge,jdbcType=INTEGER}, 
      #{cardId,jdbcType=INTEGER}, #{userGender,jdbcType=CHAR}, #{userPhoneNumber,jdbcType=CHAR}, 
      #{userEmail,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liangx.practice.booksystem.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userAge != null">
        user_age,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="userGender != null">
        user_gender,
      </if>
      <if test="userPhoneNumber != null">
        user_phone_number,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=CHAR},
      </if>
      <if test="userAge != null">
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=INTEGER},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=CHAR},
      </if>
      <if test="userPhoneNumber != null">
        #{userPhoneNumber,jdbcType=CHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liangx.practice.booksystem.entity.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=CHAR},
      </if>
      <if test="userAge != null">
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=INTEGER},
      </if>
      <if test="userGender != null">
        user_gender = #{userGender,jdbcType=CHAR},
      </if>
      <if test="userPhoneNumber != null">
        user_phone_number = #{userPhoneNumber,jdbcType=CHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=CHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liangx.practice.booksystem.entity.User">
    update user
    set user_name = #{userName,jdbcType=CHAR},
      user_age = #{userAge,jdbcType=INTEGER},
      card_id = #{cardId,jdbcType=INTEGER},
      user_gender = #{userGender,jdbcType=CHAR},
      user_phone_number = #{userPhoneNumber,jdbcType=CHAR},
      user_email = #{userEmail,jdbcType=CHAR}
    where user_id = #{userId,jdbcType=CHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.liangx.practice.booksystem.entity.User">
    <constructor>
      <idArg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_name" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="user_age" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="card_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_gender" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="user_phone_number" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_emial" javaType="java.lang.String" jdbcType="CHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_age, card_id, user_gender, user_phone_number, user_emial
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.liangx.practice.booksystem.entity.User">
    insert into user (user_id, user_name, user_age, 
      card_id, user_gender, user_phone_number, 
      user_emial)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=CHAR}, #{userAge,jdbcType=INTEGER}, 
      #{cardId,jdbcType=INTEGER}, #{userGender,jdbcType=CHAR}, #{userPhoneNumber,jdbcType=INTEGER}, 
      #{userEmial,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liangx.practice.booksystem.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userAge != null">
        user_age,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="userGender != null">
        user_gender,
      </if>
      <if test="userPhoneNumber != null">
        user_phone_number,
      </if>
      <if test="userEmial != null">
        user_emial,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=CHAR},
      </if>
      <if test="userAge != null">
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=INTEGER},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=CHAR},
      </if>
      <if test="userPhoneNumber != null">
        #{userPhoneNumber,jdbcType=INTEGER},
      </if>
      <if test="userEmial != null">
        #{userEmial,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liangx.practice.booksystem.entity.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=CHAR},
      </if>
      <if test="userAge != null">
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=INTEGER},
      </if>
      <if test="userGender != null">
        user_gender = #{userGender,jdbcType=CHAR},
      </if>
      <if test="userPhoneNumber != null">
        user_phone_number = #{userPhoneNumber,jdbcType=INTEGER},
      </if>
      <if test="userEmial != null">
        user_emial = #{userEmial,jdbcType=CHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liangx.practice.booksystem.entity.User">
    update user
    set user_name = #{userName,jdbcType=CHAR},
      user_age = #{userAge,jdbcType=INTEGER},
      card_id = #{cardId,jdbcType=INTEGER},
      user_gender = #{userGender,jdbcType=CHAR},
      user_phone_number = #{userPhoneNumber,jdbcType=INTEGER},
      user_emial = #{userEmial,jdbcType=CHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>